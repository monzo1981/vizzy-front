name: Build and deploy Node.js app to Azure Web App - vizzzyWebApp
on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '22.x'
      
      - name: npm install and build
        run: |
          npm ci
          npm run build
      
      - name: Create deployment package
        run: |
          mkdir -p deploy
          
          # نسخ standalone build (Next.js standalone mode)
          if [ -d ".next/standalone" ]; then
            echo "Using Next.js standalone build..."
            cp -r .next/standalone/. deploy/
            
            # نسخ static files
            mkdir -p deploy/.next/static
            cp -r .next/static deploy/.next/static
          else
            echo "Using regular Next.js build..."
            cp -r .next deploy/
          fi
          
          # نسخ public folder
          [ -d "public" ] && cp -r public deploy/public || echo "No public folder"
          
          # نسخ src (للـ middleware و server components)
          [ -d "src" ] && cp -r src deploy/src || echo "No src folder"
          
          # نسخ config files
          cp package.json deploy/
          cp package-lock.json deploy/
          [ -f "next.config.js" ] && cp next.config.js deploy/ || echo "No next.config.js"
          [ -f "next.config.mjs" ] && cp next.config.mjs deploy/ || echo "No next.config.mjs"
          [ -f "next.config.ts" ] && cp next.config.ts deploy/ || echo "No next.config.ts"
          [ -f "tsconfig.json" ] && cp tsconfig.json deploy/ || echo "No tsconfig.json"
          [ -f ".deployment" ] && cp .deployment deploy/ || echo "No .deployment"
          
          # نسخ node_modules فقط إذا لم يكن standalone
          if [ ! -d ".next/standalone" ]; then
            cp -r node_modules deploy/
          fi
          
          # منع Oryx من البناء
          echo "Disabling Oryx build" > deploy/.skipDeployment
          
          cat > deploy/web.config << 'EOF'
          <?xml version="1.0" encoding="utf-8"?>
          <configuration>
            <system.webServer>
              <handlers>
                <add name="iisnode" path="server.js" verb="*" modules="iisnode"/>
              </handlers>
              <rewrite>
                <rules>
                  <rule name="NodeInspector" patternSyntax="ECMAScript" stopProcessing="true">
                    <match url="^server.js\/debug[\/]?" />
                  </rule>
                  <rule name="StaticContent">
                    <action type="Rewrite" url="public{REQUEST_URI}"/>
                  </rule>
                  <rule name="DynamicContent">
                    <conditions>
                      <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="True"/>
                    </conditions>
                    <action type="Rewrite" url="server.js"/>
                  </rule>
                </rules>
              </rewrite>
            </system.webServer>
          </configuration>
          EOF
          
          cd deploy
          zip -r ../release.zip .
      
      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write
      contents: read
    
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app
      
      - name: Unzip artifact for deployment
        run: unzip release.zip
      
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_60CD296CA9544952A2889AC6F6DF1C24 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_31FD7D403C2D4B368D7609E371CC7AA5 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_908A8BEBFD224116AB5FC8808EEAE4EA }}
      
      - name: Stop Web App
        run: |
          echo "Stopping web app..."
          az webapp stop --name vizzzyWebApp --resource-group vizzzyWebApp_group
          sleep 10
      
      - name: Delete old files from wwwroot
        run: |
          echo "Cleaning old deployment files..."
          az webapp deployment source delete --name vizzzyWebApp --resource-group vizzzyWebApp_group || true
          
          # استخدام Kudu API لمسح الملفات
          PUBLISH_PROFILE=$(az webapp deployment list-publishing-profiles --name vizzzyWebApp --resource-group vizzzyWebApp_group --xml)
          KUDU_USER=$(echo $PUBLISH_PROFILE | grep -oP 'userName="\K[^"]+' | head -1)
          KUDU_PASS=$(echo $PUBLISH_PROFILE | grep -oP 'userPWD="\K[^"]+' | head -1)
          
          # مسح oryx-manifest.toml وnode_modules.tar.gz
          curl -X DELETE "https://vizzzywebapp-dcb8azg7asc4h4av.scm.canadacentral-01.azurewebsites.net/api/vfs/site/wwwroot/oryx-manifest.toml" \
            -u "$KUDU_USER:$KUDU_PASS" || echo "No manifest to delete"
          
          curl -X DELETE "https://vizzzywebapp-dcb8azg7asc4h4av.scm.canadacentral-01.azurewebsites.net/api/vfs/site/wwwroot/node_modules.tar.gz" \
            -u "$KUDU_USER:$KUDU_PASS" || echo "No tar.gz to delete"
        continue-on-error: true
      
      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'vizzzyWebApp'
          slot-name: 'Production'
          package: .
          clean: true
      
      - name: Start Web App
        run: |
          echo "Starting web app..."
          az webapp start --name vizzzyWebApp --resource-group vizzzyWebApp_group
          sleep 5
          echo "Deployment completed!"